class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Stack<Integer> stack1 = buildStack(l1);
        Stack<Integer> stack2 = buildStack(l2);
        ListNode head = null;
        int carry = 0;
        // (7)-> 8-> 0-> 7-> null
        while(!stack1.isEmpty() || !stack2.isEmpty() || carry != 0){
            int sum = carry;
            if (!stack1.isEmpty()) sum = sum + stack1.pop();
            if (!stack2.isEmpty()) sum = sum+ stack2.pop();
            
            
            ListNode node = new ListNode(sum%10); // 7-> null
            node.next = head;
            head= node;
            
            carry = sum / 10;
            
        }
        return head;
    }
    
    public Stack<Integer> buildStack(ListNode h){
        Stack<Integer> stack = new Stack<>();
        while(h != null){
            stack.push(h.val);
            h = h.next;
        }
        return stack;
    }
}